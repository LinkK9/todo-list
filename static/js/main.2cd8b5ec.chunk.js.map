{"version":3,"sources":["TodoList.module.css","Home.module.css","TodoService.js","redux/ActionType.js","redux/ActionCreator.js","Login.js","PrivateRoute.js","AppHeader.js","TaskInput.js","TaskItem.js","TodoList.js","Home.js","App.js","reportWebVitals.js","redux/reducers/RootReduder.js","redux/reducers/AuthReducer.js","redux/reducers/TodoReducer.js","redux/Store.js","index.js","App.module.css","TaskItem.module.css"],"names":["module","exports","apiEndPoint","TodoService","GetTodoList","axios","get","AddTodo","inputValue","createDate","Date","getTime","post","taskName","createdDate","isCompleted","isFavorite","ChooseFavorite","id","value","patch","ChangeStatusComplete","DeleteTask","delete","EditTask","ChangeInputValueType","ChangeStatusCompleteValue","ChooseFavoriteTaskValue","LoginSucces","LogoutSucces","BeginAddTodo","AddTodoSuccess","GetTodoSuccess","SyncError","ClearScreen","GetData","dispatch","getState","a","type","data","console","log","payload","taskList","Login","useState","userName","setUserName","password","setPassword","history","useHistory","useDispatch","useSelector","store","authState","isLoggedIn","to","placeholder","onChange","e","target","style","marginTop","onClick","push","alert","PrivateRoute","props","children","AppHeader","handleLogout","isModalVisible","setIsModalVisible","className","classes","appHeader","header","danger","btn","visible","onCancel","onOk","okButtonProps","okText","TaskInput","todoState","newTaskName","newInputValue","onPressEnter","length","AddNewTaskAsync","TextArea","Input","TaskItem","taskItem","onChooseFavoriteTask","onCompletionStageChanged","editValue","setEditValue","starStyle","on","color","float","position","top","right","transform","off","todoContainer","tickBox","checked","completed","notCompleted","stopPropagation","title","footer","block","autoSize","minRows","maxRows","allowClear","TodoList","isLoading","isError","ChangeStatusCompletedAsync","ChooseFavoriteTaskAsync","level","tip","todoListContainer","map","task","Home","partitions","_","partition","tasksCompleted","orderBy","newTaskValue","tasksNotCompleted","filter","t","includes","useEffect","taskInputContainer","taskListContainer","App","app","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","state","localStorage","getItem","action","setItem","removeItem","idIndex","findIndex","val","taskListGet","newTask","completedDate","newTaskList","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cd8b5ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListContainer\":\"TodoList_todoListContainer__vxutJ\",\"btn\":\"TodoList_btn__aA5iJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskInputContainer\":\"Home_taskInputContainer__31hJq\",\"taskListContainer\":\"Home_taskListContainer__BkkHP\"};","import axios from \"axios\";\n\nconst apiEndPoint = \"https://linhtrinhviet.herokuapp.com\";\n\nconst GetTodoList = () => {\n  return axios.get(apiEndPoint + \"/todo\");\n};\n\nconst AddTodo = (inputValue) => {\n  const createDate = new Date().getTime();\n  return axios.post(apiEndPoint + \"/todo\", {\n    taskName: inputValue,\n    createdDate: createDate,\n    isCompleted: false,\n    isFavorite: false,\n  });\n};\n\nconst EditTask = (id, value) => {\n  return axios.patch(apiEndPoint + `/todo/${id}`, {\n    taskName: value,\n  });\n};\n\nconst ChooseFavorite = (id, value) => {\n  return axios.patch(apiEndPoint + `/todo/${id}`, {\n    isFavorite: value,\n  });\n};\n\nconst ChangeStatusComplete = (id, value) => {\n  return axios.patch(apiEndPoint + `/todo/${id}`, {\n    isCompleted: value,\n  });\n};\n\nconst DeleteTask = (id) => {\n  return axios.delete(apiEndPoint + `/todo/${id}`);\n};\n\nconst TodoService = {\n  GetTodoList,\n  AddTodo,\n  ChooseFavorite,\n  ChangeStatusComplete,\n  DeleteTask,\n  EditTask\n};\n\nexport default TodoService;\n","export const ChangeInputValueType = \"Change_Input_Value\";\nexport const GetTasksListValue = \"Get_Tasks_List\";\nexport const ChangeStatusCompleteValue = \"Changed_Status_Complete\";\nexport const ChooseFavoriteTaskValue = \"Choose_Favorite_Task\";\nexport const LoginSucces = \"Login_Succsess\";\nexport const LogoutSucces = \"Logout_Succsess\";\n\nexport const BeginAddTodo = \"Begin_Add_Todo\";\nexport const AddTodoSuccess = \"Add_Todo_Success\";\nexport const GetTodoSuccess = \"Get_Todo_Success\";\nexport const SyncError = \"Sync_Error\";\nexport const ClearScreen = \"Clear_Screen\";\nexport const DeleteTask = \"Delete_Task\";\nexport const EditTask= \"Edit_Task\";\n","import TodoService from \"../TodoService\";\nimport {\n  ChangeInputValueType,\n  GetTasksListValue,\n  ChangeStatusCompleteValue,\n  ChooseFavoriteTaskValue,\n  LoginSucces,\n  LogoutSucces,\n  BeginAddTodo,\n  AddTodoSuccess,\n  SyncError,\n  GetTodoSuccess,\n  ClearScreen,\n  DeleteTask,\n  EditTask\n} from \"./ActionType\";\n\nexport const ChangeInputValue = (newInputValue) => {\n  return {\n    type: ChangeInputValueType,\n    payload: {\n      newInputValue,\n    },\n  };\n};\nexport const GetTasksList = (tasksList) => {\n  return {\n    type: GetTasksListValue,\n    payload: {\n      tasksList,\n    },\n  };\n};\n\nexport const ChangeStatusComplete = (id, value) => {\n  return {\n    type: ChangeStatusCompleteValue,\n    payload: {\n      id,\n      value,\n    },\n  };\n};\n\nexport const ChooseFavoriteTask = (id, value) => {\n  return {\n    type: ChooseFavoriteTaskValue,\n    payload: {\n      id,\n      value,\n    },\n  };\n};\n\nexport const AttempLogin = () => {\n  return {\n    type: LoginSucces,\n  };\n};\n\nexport const AttempLogout = () => {\n  return {\n    type: LogoutSucces,\n  };\n};\n\nexport const AddNewTaskAsync = (inputValue) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BeginAddTodo,\n    });\n    await TodoService.AddTodo(inputValue);\n\n    // Json server da co san 'id' va overide lai nen phai get lai id cua task tao moi\n    const data = await TodoService.GetTodoList();\n    dispatch({\n      type: AddTodoSuccess,\n      payload: {\n        newTaskName: inputValue,\n        id: data.data[data.data.length - 1]['id']\n      },\n    });\n  } catch (ex) {\n    dispatch({\n      type: SyncError,\n    });\n  } finally {\n    // END_ADD_TODO\n  }\n};\n\nexport const GetData = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BeginAddTodo,\n    });\n\n    const data = await TodoService.GetTodoList();\n\n    console.log(\"data fetch ve:\", data.data);\n    dispatch({\n      type: GetTodoSuccess,\n      payload: {\n        taskList: data.data,\n      },\n    });\n  } catch (err) {\n    dispatch({\n      type: SyncError,\n    });\n  }\n};\n\nexport const ChooseFavoriteTaskAsync = (id, value) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    await TodoService.ChooseFavorite(id, value);\n    dispatch({\n      type: ChooseFavoriteTaskValue,\n      payload: {\n        id,\n        value,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const ChangeStatusCompletedAsync = (id, value) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    await TodoService.ChangeStatusComplete(id, value);\n    dispatch({\n      type: ChangeStatusCompleteValue,\n      payload: {\n        id,\n        value,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const ClearTask = () => {\n  return {\n    type: ClearScreen\n  }\n}\n\nexport const DeleteTaskAsync = (id) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    await TodoService.DeleteTask(id);\n    dispatch({\n      type: DeleteTask,\n      payload: {\n        id\n      }\n    })\n  } catch(err) {\n    console.log(err)\n\n  }\n}\n\nexport const EditTaskAsync = (id, value) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    await TodoService.EditTask(id, value);\n    dispatch({\n      type: EditTask,\n      payload: {\n        id,\n        value\n      }\n    })\n  } catch(err) {\n    console.log(err)\n\n  }\n}","import Title from \"antd/lib/typography/Title\";\nimport { Input } from \"antd\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { AttempLogin } from \"./redux/ActionCreator\";\nimport { Button } from \"antd\";\n\nfunction Login() {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const isLoggedIn = useSelector((store) => store.authState.isLoggedIn);\n\n  const handleLogIn = () => {\n    if (!userName || !password) {\n      alert(\"Sai ten tai khoan mat khau\");\n      return;\n    }\n    dispatch(AttempLogin());\n    history.push(\"/\");\n  };\n\n  return isLoggedIn ? (\n    <Redirect to=\"/home\" />\n  ) : (\n    <div>\n      <Title>Login</Title>\n      <Input\n        placeholder=\"User name: Nhập tên bất kỳ\"\n        value={userName}\n        onChange={(e) => setUserName(e.target.value)}\n      />\n      <Input\n        placeholder=\"password: Nhập bất kỳ\"\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <div style={{marginTop: 16}}>\n        <Button type=\"primary\" onClick={handleLogIn}>\n          Đăng nhập\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport default function PrivateRoute(props) {\n  const isLoggedIn = useSelector((store) => store.authState.isLoggedIn);\n\n  return isLoggedIn ? (\n    <Route {...props}>{props.children}</Route>\n  ) : (\n    <Redirect to=\"/login\" />\n  );\n}\n","import classes from \"./App.module.css\";\nimport \"antd/dist/antd.css\";\nimport Title from \"antd/lib/typography/Title\";\nimport { Button, Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AttempLogout } from \"./redux/ActionCreator\";\nimport { useHistory } from \"react-router\";\n\nconst AppHeader = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleLogout = () => {\n      dispatch(AttempLogout());\n      history.push(\"/login\");\n  };\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleOk = () => {\n    handleLogout();\n  };\n\n  return (\n    <div className={classes.appHeader}>\n      <Title className={classes.header}>Todo-List!</Title>\n      <Button danger className={classes.btn} onClick={showModal}>\n        Logout\n      </Button>\n      <Modal  visible={isModalVisible} onCancel={handleCancel} onOk={handleOk} okButtonProps={{danger: true}} okText='Logout' >\n        <h2>Bạn có muốn logout?</h2>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import { Input } from \"antd\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ChangeInputValue, AddNewTaskAsync } from \"./redux/ActionCreator\";\n\nfunction TaskInput() {\n  const dispatch = useDispatch();\n\n  const inputValue = useSelector((store) => store.todoState.newTaskName);\n\n  const handlePressEnter = () => {\n    if (inputValue === \"\") {\n      return;\n    }\n\n    dispatch(AddNewTaskAsync(inputValue));\n  };\n\n  const handleOnChange = (e) => {\n    dispatch(ChangeInputValue(e.target.value));\n  };\n\n  return (\n    <Input\n      placeholder=\"Nhập tên task rồi ấn enter\"\n      value={inputValue}\n      onChange={handleOnChange}\n      onPressEnter={handlePressEnter}\n    />\n  );\n}\n\nexport default TaskInput;\n","import React, { useState } from \"react\";\nimport { Checkbox, Modal, Input, Button } from \"antd\";\nimport classes from \"./TaskItem.module.css\";\nimport { AiFillStar } from \"react-icons/ai\";\nimport { useDispatch } from \"react-redux\";\nimport { DeleteTaskAsync, EditTaskAsync } from \"./redux/ActionCreator\";\n// import \"antd/dist/antd.css\";\n\n\nconst {TextArea} = Input;\n\nfunction TaskItem({\n  taskItem,\n  onChooseFavoriteTask,\n  onCompletionStageChanged,\n}) {\n  const dispatch = useDispatch();\n  const [editValue, setEditValue] = useState(taskItem.taskName);\n\n  const handleChange = (e) => {\n    setIsModalVisible(false);\n    onCompletionStageChanged(taskItem.id, !taskItem.isCompleted);\n  };\n\n  const handleFavStatus = (e) => {\n    e.stopPropagation();\n    onChooseFavoriteTask(taskItem.id, !taskItem.isFavorite);\n  };\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  // const handleOk = () => {\n  //   setIsModalVisible(false);\n  // };\n\n  const handleDeleteTask = () => {\n    dispatch(DeleteTaskAsync(taskItem.id));\n  };\n\n  const handleEditChange = (e) => {\n    setEditValue(e.target.value);\n  };\n\n  const handleEditSuccess = () => {\n    dispatch(EditTaskAsync(taskItem.id, editValue));\n    setIsModalVisible(false);\n  };\n\n  const starStyle = {\n    on: {\n      color: \"orange\",\n      float: \"right\",\n      position: \"absolute\",\n      top: \"50%\",\n      right: \"10px\",\n      transform: \"translate(0, -50%)\",\n    },\n    off: {\n      color: \"gainsboro\",\n      float: \"right\",\n      position: \"absolute\",\n      top: \"50%\",\n      right: \"10px\",\n      transform: \"translate(0, -50%)\",\n    },\n  };\n  return (\n    <>\n      <div onClick={showModal} className={classes.todoContainer}>\n        <Checkbox\n          id={taskItem.id}\n          className={classes.tickBox}\n          onChange={handleChange}\n          checked={taskItem.isCompleted}\n        ></Checkbox>\n        <div \n          className={\n            taskItem.isCompleted ? classes.completed : classes.notCompleted\n          }\n        >\n          {taskItem.taskName}\n        </div>\n\n        {taskItem.isCompleted ? null : (\n          <AiFillStar\n            onClick={handleFavStatus}\n            style={taskItem.isFavorite ? starStyle.on : starStyle.off}\n          />\n        )}\n      </div>\n      <Modal\n        title=\"Edit Task\"\n        visible={isModalVisible}\n        // onOk={handleOk}\n        onCancel={handleCancel}\n        footer={[\n          <Button type=\"primary\" block danger onClick={handleDeleteTask}>\n            Delete Task\n          </Button>,\n        ]}\n      >\n        <TextArea\n          onChange={handleEditChange}\n          value={editValue}\n          onPressEnter={handleEditSuccess}\n          autoSize={ {minRows: 1, maxRows: 6} }\n          allowClear\n        ></TextArea>\n      </Modal>\n    </>\n  );\n}\n\nexport default TaskItem;\n","import Title from \"antd/lib/typography/Title\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  ChangeStatusCompletedAsync,\n  ChooseFavoriteTaskAsync,\n  GetData,\n} from \"./redux/ActionCreator\";\n\nimport TaskItem from \"./TaskItem\";\nimport classes from \"./TodoList.module.css\";\nimport { Spin, Button } from \"antd\";\n\nfunction TodoList(props) {\n  const taskList = props.taskList;\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector((store) => store.todoState.isLoading);\n\n  const isError = useSelector((store) => store.todoState.isError);\n\n  const onCompletionStageChanged = (id, value) => {\n    dispatch(ChangeStatusCompletedAsync(id, value));\n  };\n\n  const onChooseFavoriteTask = (id, value) => {\n    dispatch(ChooseFavoriteTaskAsync(id, value));\n  };\n\n  return (\n    <div>\n      <Title level={3}>{props.title}</Title>\n      {props.title === \"Danh sách task\" && isLoading && (\n        <Spin tip=\"Loading...\"></Spin>\n      )}\n      {props.title === \"Danh sách task\" && isError && (\n        <Button className={classes.btn} onClick={() => dispatch(GetData())}>\n          Try again!\n        </Button>\n      )}\n      <div className={classes.todoListContainer}>\n        {taskList.map((task) => (\n          <TaskItem\n            key={task.id}\n            taskItem={task}\n            onChooseFavoriteTask={onChooseFavoriteTask}\n            onCompletionStageChanged={onCompletionStageChanged}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import _ from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppHeader from \"./AppHeader\";\nimport TaskInput from \"./TaskInput\";\nimport TodoList from \"./TodoList\";\nimport classes from \"./Home.module.css\";\nimport { ClearTask, GetData } from \"./redux/ActionCreator\";\nimport { useEffect } from \"react\";\n\nexport default function Home() {\n  let taskList = useSelector((store) => store.todoState.taskList);\n\n  const partitions = _.partition(taskList, (task) => task.isCompleted);\n\n  const tasksCompleted = _.orderBy(partitions[0], [\"createdDate\"], [\"desc\"]);\n\n  const newTaskValue = useSelector((store) => store.todoState.newTaskName);\n\n  let tasksNotCompleted = _.orderBy(\n    partitions[1],\n    [\"isFavorite\", \"createdDate\"],\n    [\"desc\", \"desc\"]\n  );\n\n  if (newTaskValue) {\n    tasksNotCompleted = tasksNotCompleted.filter((t) =>\n      t.taskName.includes(newTaskValue)\n    );\n  }\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(ClearTask());\n    dispatch(GetData());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <AppHeader></AppHeader>\n      <div className={classes.taskInputContainer}>\n        <TaskInput />\n      </div>\n      <section className={classes.taskListContainer}>\n        <TodoList taskList={tasksNotCompleted} title={\"Danh sách task\"} />\n        <TodoList\n          taskList={tasksCompleted}\n          title={\"Danh sách task hoàn thành\"}\n        />\n      </section>\n    </>\n  );\n}\n","import classes from \"./App.module.css\";\nimport \"antd/dist/antd.css\";\nimport React from \"react\";\nimport Login from \"./Login\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <div className={classes.app}>\n      <Router>\n        <Switch>\n          <PrivateRoute path=\"/home\">\n            <Home />\n          </PrivateRoute>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { todo } from \"./TodoReducer\";\nimport { auth } from \"./AuthReducer\";\n\nexport default combineReducers({ authState: auth, todoState: todo });\n","import { LoginSucces, LogoutSucces } from \"../ActionType\";\n\nexport const auth = (\n  state = { isLoggedIn: localStorage.getItem(\"isLoggedIn\") },\n  action\n) => {\n  switch (action.type) {\n    case LoginSucces: {\n      localStorage.setItem(\"isLoggedIn\", true);\n      return {\n        ...state,\n        isLoggedIn: true,\n      };\n    }\n\n    case LogoutSucces: {\n      localStorage.removeItem(\"isLoggedIn\");\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  ChangeInputValueType,\n  ChangeStatusCompleteValue,\n  ChooseFavoriteTaskValue,\n  BeginAddTodo,\n  AddTodoSuccess,\n  SyncError,\n  GetTodoSuccess,\n  ClearScreen,\n  DeleteTask,\n  EditTask,\n} from \"../ActionType\";\n// import { v4 as uuidv4 } from \"uuid\";\n\nexport const todo = (\n  state = {\n    taskList: [],\n    newTaskName: \"\",\n    isLoading: true,\n    isError: false,\n  },\n  action\n) => {\n  switch (action.type) {\n    case EditTask: {\n      const idIndex = state.taskList.findIndex(task => task.id === action.payload.id)\n      return{\n        ...state,\n        taskList: [...state.taskList.filter(val => val.id !== action.payload.id), {...state.taskList[idIndex], taskName: action.payload.value}]\n      }\n    }\n    case DeleteTask: {\n      return {\n        ...state,\n        taskList: [...state.taskList.filter(val => val.id !== action.payload.id)]\n      }\n    }\n    case ClearScreen: {\n      return {\n        ...state,\n        taskList: [],\n      };\n    }\n    case SyncError: {\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    }\n    case GetTodoSuccess: {\n      const taskListGet = action.payload.taskList;\n      return {\n        ...state,\n        taskList: [...state.taskList, ...taskListGet],\n        isLoading: false,\n      };\n    }\n    case BeginAddTodo: {\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    }\n    case AddTodoSuccess: {\n      const newTask = {\n        // id: uuidv4(),\n        id: action.payload.id,\n        taskName: action.payload.newTaskName,\n        isCompleted: false,\n        isFavorite: false,\n        createdDate: new Date().getTime(),\n        completedDate: \"\",\n      };\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        newTaskName: \"\",\n        taskList: [...state.taskList, newTask],\n      };\n    }\n    case ChangeInputValueType: {\n      return { ...state, newTaskName: action.payload.newInputValue };\n    }\n    case ChangeStatusCompleteValue: {\n      const newTaskList = state.taskList.map((task) =>\n        task.id === action.payload.id\n          ? { ...task, isCompleted: !task.isCompleted }\n          : task\n      );\n      console.log(newTaskList);\n      return { ...state, taskList: newTaskList };\n    }\n    case ChooseFavoriteTaskValue: {\n      const newTaskList = state.taskList.map((task) =>\n        task.id === action.payload.id\n          ? { ...task, isFavorite: !task.isFavorite }\n          : task\n      );\n      return { ...state, taskList: newTaskList };\n    }\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware } from \"redux\";\nimport { createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/RootReduder\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2o1wF\",\"header\":\"App_header__312TE\",\"appHeader\":\"App_appHeader__3x9BR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListContainer\":\"TaskItem_todoListContainer__-Usb_\",\"todoContainer\":\"TaskItem_todoContainer__3F5qh\",\"flexCenter\":\"TaskItem_flexCenter__DJLsg\",\"tickBox\":\"TaskItem_tickBox__3Q-Rw\",\"completed\":\"TaskItem_completed__lHSvM\",\"notCompleted\":\"TaskItem_notCompleted__36eN3\",\"starOn\":\"TaskItem_starOn__3J_GI\",\"starOff\":\"TaskItem_starOff__3kP4z\",\"createdDate\":\"TaskItem_createdDate__2S8Gt\",\"textRed\":\"TaskItem_textRed__1I_HM\",\"textSuccess\":\"TaskItem_textSuccess__2sGO_\"};"],"sourceRoot":""}